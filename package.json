{
  "name": "backend",
  "version": "0.0.0",
  "description": "",
  "author": "",
  "license": "MIT",
  "scripts": {
    "start": "npm run build && cross-env NODE_ENV=production node dist/server.js",
    "dev": "cross-env NODE_ENV=local nodemon",
    "stress": "cross-env NODE_ENV=stress nodemon",
    "build": "tsc && tsc-alias",
    "build:swc": "swc src -d dist --source-maps --copy-files",
    "test": "cross-env NODE_ENV=development jest --forceExit --detectOpenHandles",
    "test:cov": "cross-env NODE_ENV=test jest --coverage --forceExit --detectOpenHandles",
    "lint": "eslint --ignore-path .gitignore --ext .ts src/",
    "lint:fix": "npm run lint -- --fix",
    "db:init": "npx dotenv -e .env.development.local -- npm run prisma:migrate && npx dotenv -e .env.test.local -- npm run prisma:migrate && npm run prisma:populate",
    "prisma:init": "prisma init",
    "prisma:backup": "sh src/prisma/utils/backup_db.sh",
    "prisma:restore": "sh src/prisma/utils/restore_db.sh",
    "prisma:migrate": "prisma migrate dev --preview-feature",
    "prisma:migrate:dev": "npx dotenv -e .env.development.local -- npm run prisma:migrate",
    "prisma:migrate:prod": "npx prisma db push",
    "prisma:generate": "prisma generate",
    "prisma:format": "prisma format",
    "prisma:seed": "prisma db seed",
    "prisma:populate": "npx dotenv -e .env.development.local -- node ./src/prisma/populate.js && npx dotenv -e .env.test.local -- node ./src/prisma/populate.js",
    "prisma:populate:dev": "npx dotenv -e .env.development.local -- node ./src/prisma/populate.js",
    "prisma:populate:test": "npx dotenv -e .env.test.local -- node ./src/prisma/populate.js",
    "prisma:populate:fake:data:dev": "npx dotenv -e .env.development.local -- node ./src/prisma/populateFakeData.js",
    "prisma:stress": "npx dotenv -e .env.stress.local -- npm run prisma:migrate && npx dotenv -e .env.stress.local -- node ./src/prisma/populate.js && npx dotenv -e .env.stress.local -- node ./src/stress/db/low/users.js && npx dotenv -e .env.stress.local -- node ./src/stress/db/low/listings.js",
    "prisma:create:admin:dev": "npx dotenv -e .env.development.local -- node ./src/prisma/createAdmin.js",
    "prisma:create:admin:test": "npx dotenv -e .env.test.local -- node ./src/prisma/createAdmin.js",
    "prisma:create:admin:stage": "npx dotenv -e .env.production.local -- node ./src/prisma/createAdmin.js",
    "artillery:start": "artillery run ./src/stress/signup.yml -o ./reports/signup.json",
    "deploy:prod": "npm run build && pm2 start ecosystem.config.js --only prod",
    "deploy:dev": "pm2 kill && npm run build && pm2 start ecosystem.development.config.js",
    "deploy:stress": "pm2 kill && npm run build && pm2 start ecosystem.stress.config.js",
    "docker:build:dev": "npm run build && docker-compose -f ./docker-compose-dev.yml -p desilist-dev --env-file .env.development.local up --build",
    "docker:build:prod": "npm run build && docker-compose -f ./docker-compose-prod.yml -p desilist-prod --env-file .env.production.local up --build",
    "docker:build:stress": "npm run build && cd src/stress && docker-compose --env-file ../../.env.stress.local up --build",
    "docker:start:dev": "docker-compose -f ./docker-compose-dev.yml -p desilist-dev --env-file .env.development.local up",
    "docker:start:prod": "docker-compose -f ./docker-compose-prod.yml -p desilist-prod --env-file .env.production.local up",
    "job:listing:about:to:expire:check:dev": "npx dotenv -e .env.development.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/listingAboutToExpireChecker.ts",
    "job:listing:about:to:expire:check:stage": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/listingAboutToExpireChecker.ts",
    "job:listing:about:to:expire:check:prod": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/listingAboutToExpireChecker.ts",
    "job:expire:activate:package:dev": "npx dotenv -e .env.development.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/expireActivatePackage.ts",
    "job:expire:activate:package:stage": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/expireActivatePackage.ts",
    "job:expire:activate:package:prod": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/expireActivatePackage.ts",
    "job:archive:chat:dev": "npx dotenv -e .env.development.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/archiveChat.ts",
    "job:archive:chat:stage": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/archiveChat.ts",
    "job:archive:chat:prod": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/archiveChat.ts",
    "job:notify:not:seen:chat:msg:dev": "npx dotenv -e .env.development.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/notifyNotSeenChatMsg.ts",
    "job:notify:not:seen:chat:msg:stage": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/notifyNotSeenChatMsg.ts",
    "job:notify:not:seen:chat:msg:prod": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/notifyNotSeenChatMsg.ts",
    "job:dismiss:flagged:expired:listings:dev": "npx dotenv -e .env.development.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/dismissFlaggedDeactivatedListing.ts",
    "job:dismiss:flagged:expired:listings:stage": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/dismissFlaggedDeactivatedListing.ts",
    "job:dismiss:flagged:expired:listings:prod": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/jobs/dismissFlaggedDeactivatedListing.ts",
    "transform:images:dev": "npx dotenv -e .env.development.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/transform_img.ts",
    "transform:images:stage": "npx dotenv -e .env.stage.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/transform_img.ts",
    "transform:images:prod": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/transform_img.ts",
    "transform:images:listing:dev": "npx dotenv -e .env.development.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/transform_img_listing.ts",
    "transform:images:listing:stage": "npx dotenv -e .env.stage.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/transform_img_listing.ts",
    "transform:images:listing:prod": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/transform_img_listing.ts",
    "category:order:dev": "npx dotenv -e .env.development.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/reorder_categories.ts",
    "category:order:stage": "npx dotenv -e .env.stage.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/reorder_categories.ts",
    "category:order:prod": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/reorder_categories.ts",
    "subcategory:order:dev": "npx dotenv -e .env.development.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/reorder_subcategories.ts",
    "subcategory:order:stage": "npx dotenv -e .env.stage.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/reorder_subcategories.ts",
    "subcategory:order:prod": "npx dotenv -e .env.production.local -- ts-node -r tsconfig-paths/register ./src/prisma/utils/reorder_subcategories.ts"
  },
  "prisma": {
    "schema": "src/prisma/schema.prisma",
    "seed": "ts-node src/prisma/seeds/index.ts"
  },
  "dependencies": {
    "@destinationstransfers/ntp": "^2.0.0",
    "@googlemaps/google-maps-services-js": "^3.3.31",
    "@prisma/client": "^3.10.0",
    "@sendgrid/mail": "^7.6.1",
    "array-sort": "^1.0.0",
    "aws-sdk": "^2.1114.0",
    "axios": "^0.26.1",
    "bcrypt": "^5.0.1",
    "class-transformer": "^0.4.0",
    "class-validator": "^0.13.1",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.5",
    "cors": "^2.8.5",
    "csvtojson": "^2.0.10",
    "dotenv": "^10.0.0",
    "dotenv-cli": "^5.0.0",
    "envalid": "^7.1.0",
    "express": "^4.17.1",
    "express-routes-versioning": "^1.0.1",
    "helmet": "^4.6.0",
    "hpp": "^0.2.3",
    "isbot": "^3.6.3",
    "json2csv": "^5.0.7",
    "jsonwebtoken": "^8.5.1",
    "luxon": "^2.3.0",
    "morgan": "^1.10.0",
    "node-cron": "^3.0.2",
    "otp-generator": "^4.0.0",
    "pdfkit": "^0.13.0",
    "qr-image": "^3.2.0",
    "randexp": "^0.5.3",
    "rate-limiter-flexible": "^2.3.8",
    "sharp": "^0.31.1",
    "socket.io-client": "^4.5.1",
    "stripe": "^9.6.0",
    "swagger-jsdoc": "^6.0.0",
    "swagger-ui-express": "^4.1.6",
    "textbox-for-pdfkit": "^0.2.1",
    "twilio": "^3.75.0",
    "uuid": "^8.3.2",
    "winston": "^3.3.3",
    "winston-daily-rotate-file": "^4.5.5"
  },
  "devDependencies": {
    "@faker-js/faker": "^6.1.2",
    "@swc/cli": "^0.1.51",
    "@swc/core": "^1.2.108",
    "@types/array-sort": "^1.0.0",
    "@types/bcrypt": "^5.0.0",
    "@types/compression": "^1.7.1",
    "@types/cookie-parser": "^1.4.2",
    "@types/cors": "^2.8.11",
    "@types/dotenv": "^8.2.0",
    "@types/express": "^4.17.13",
    "@types/helmet": "^4.0.0",
    "@types/hpp": "^0.2.1",
    "@types/jest": "^27.0.0",
    "@types/jsonwebtoken": "^8.5.4",
    "@types/morgan": "^1.9.3",
    "@types/node": "^16.0.1",
    "@types/sharp": "^0.31.0",
    "@types/supertest": "^2.0.11",
    "@types/swagger-jsdoc": "^6.0.1",
    "@types/swagger-ui-express": "^4.1.3",
    "@types/uuid": "^8.3.4",
    "@types/winston": "^2.4.4",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "cross-env": "^7.0.3",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.0",
    "husky": "^7.0.1",
    "jest": "^27.0.6",
    "lint-staged": "^11.0.0",
    "node-config": "^0.0.2",
    "node-gyp": "^8.1.0",
    "nodemon": "^2.0.9",
    "pm2": "^5.1.0",
    "prettier": "^2.3.2",
    "prisma": "^3.7.0",
    "supertest": "^6.1.3",
    "ts-jest": "^27.1.3",
    "ts-node": "^10.4.0",
    "tsc-alias": "^1.4.1",
    "tsconfig-paths": "^3.10.1",
    "typescript": "^4.5.2"
  }
}
